
#include <types.h>
#include <stddef.h>
#include <ascii.h>

enum keycode_result {
    KEYCODE_NULL = 0,
    KEYCODE_CTRL_A,
    KEYCODE_CTRL_B,
    KEYCODE_CTRL_C,
    KEYCODE_CTRL_D,
    KEYCODE_CTRL_E,
    KEYCODE_CTRL_F,
    KEYCODE_CTRL_G,
    KEYCODE_CTRL_H,
    KEYCODE_CTRL_I,
    KEYCODE_CTRL_J,
    KEYCODE_CTRL_K,
    KEYCODE_CTRL_L,
    KEYCODE_CTRL_M,
    KEYCODE_CTRL_N,
    KEYCODE_CTRL_O,
    KEYCODE_CTRL_P,
    KEYCODE_CTRL_Q,
    KEYCODE_CTRL_R,
    KEYCODE_CTRL_S,
    KEYCODE_CTRL_T,
    KEYCODE_CTRL_U,
    KEYCODE_CTRL_V,
    KEYCODE_CTRL_W,
    KEYCODE_CTRL_X,
    KEYCODE_CTRL_Y,
    KEYCODE_CTRL_Z,

    KEYCODE_CUSTOM_OFFSET = 128,
    KEYCODE_F1 = KEYCODE_CUSTOM_OFFSET,
    KEYCODE_F2,
    KEYCODE_F3,
    KEYCODE_F4,
    KEYCODE_F5,
    KEYCODE_F6,
    KEYCODE_F7,
    KEYCODE_F8,
    KEYCODE_F9,
    KEYCODE_F10,
    KEYCODE_F11,
    KEYCODE_F12,

    KEYCODE_INSERT,
    KEYCODE_DELETE,
    KEYCODE_HOME,
    KEYCODE_END,
    KEYCODE_PAGEUP,
    KEYCODE_PAGEDOWN,

    KEYCODE_UP,
    KEYCODE_DOWN,
    KEYCODE_LEFT,
    KEYCODE_RIGHT,
    KEYCODE_MIDDLE,

    KEYCODE_ALT_N0 = KEYCODE_CUSTOM_OFFSET + '0',
    KEYCODE_ALT_N1 = KEYCODE_CUSTOM_OFFSET + '1',
    KEYCODE_ALT_N2 = KEYCODE_CUSTOM_OFFSET + '2',
    KEYCODE_ALT_N3 = KEYCODE_CUSTOM_OFFSET + '3',
    KEYCODE_ALT_N4 = KEYCODE_CUSTOM_OFFSET + '4',
    KEYCODE_ALT_N5 = KEYCODE_CUSTOM_OFFSET + '5',
    KEYCODE_ALT_N6 = KEYCODE_CUSTOM_OFFSET + '6',
    KEYCODE_ALT_N7 = KEYCODE_CUSTOM_OFFSET + '7',
    KEYCODE_ALT_N8 = KEYCODE_CUSTOM_OFFSET + '8',
    KEYCODE_ALT_N9 = KEYCODE_CUSTOM_OFFSET + '9',

    KEYCODE_ALT_UA = KEYCODE_CUSTOM_OFFSET + 'A',
    KEYCODE_ALT_UB = KEYCODE_CUSTOM_OFFSET + 'B',
    KEYCODE_ALT_UC = KEYCODE_CUSTOM_OFFSET + 'C',
    KEYCODE_ALT_UD = KEYCODE_CUSTOM_OFFSET + 'D',
    KEYCODE_ALT_UE = KEYCODE_CUSTOM_OFFSET + 'E',
    KEYCODE_ALT_UF = KEYCODE_CUSTOM_OFFSET + 'F',
    KEYCODE_ALT_UG = KEYCODE_CUSTOM_OFFSET + 'G',
    KEYCODE_ALT_UH = KEYCODE_CUSTOM_OFFSET + 'H',
    KEYCODE_ALT_UI = KEYCODE_CUSTOM_OFFSET + 'I',
    KEYCODE_ALT_UJ = KEYCODE_CUSTOM_OFFSET + 'J',
    KEYCODE_ALT_UK = KEYCODE_CUSTOM_OFFSET + 'K',
    KEYCODE_ALT_UL = KEYCODE_CUSTOM_OFFSET + 'L',
    KEYCODE_ALT_UM = KEYCODE_CUSTOM_OFFSET + 'M',
    KEYCODE_ALT_UN = KEYCODE_CUSTOM_OFFSET + 'N',
    KEYCODE_ALT_UO = KEYCODE_CUSTOM_OFFSET + 'O',
    KEYCODE_ALT_UP = KEYCODE_CUSTOM_OFFSET + 'P',
    KEYCODE_ALT_UQ = KEYCODE_CUSTOM_OFFSET + 'Q',
    KEYCODE_ALT_UR = KEYCODE_CUSTOM_OFFSET + 'R',
    KEYCODE_ALT_US = KEYCODE_CUSTOM_OFFSET + 'S',
    KEYCODE_ALT_UT = KEYCODE_CUSTOM_OFFSET + 'T',
    KEYCODE_ALT_UU = KEYCODE_CUSTOM_OFFSET + 'U',
    KEYCODE_ALT_UV = KEYCODE_CUSTOM_OFFSET + 'V',
    KEYCODE_ALT_UW = KEYCODE_CUSTOM_OFFSET + 'W',
    KEYCODE_ALT_UX = KEYCODE_CUSTOM_OFFSET + 'X',
    KEYCODE_ALT_UY = KEYCODE_CUSTOM_OFFSET + 'Y',
    KEYCODE_ALT_UZ = KEYCODE_CUSTOM_OFFSET + 'Z',

    KEYCODE_ALT_LA = KEYCODE_CUSTOM_OFFSET + 'a',
    KEYCODE_ALT_LB = KEYCODE_CUSTOM_OFFSET + 'b',
    KEYCODE_ALT_LC = KEYCODE_CUSTOM_OFFSET + 'c',
    KEYCODE_ALT_LD = KEYCODE_CUSTOM_OFFSET + 'd',
    KEYCODE_ALT_LE = KEYCODE_CUSTOM_OFFSET + 'e',
    KEYCODE_ALT_LF = KEYCODE_CUSTOM_OFFSET + 'f',
    KEYCODE_ALT_LG = KEYCODE_CUSTOM_OFFSET + 'g',
    KEYCODE_ALT_LH = KEYCODE_CUSTOM_OFFSET + 'h',
    KEYCODE_ALT_LI = KEYCODE_CUSTOM_OFFSET + 'i',
    KEYCODE_ALT_LJ = KEYCODE_CUSTOM_OFFSET + 'j',
    KEYCODE_ALT_LK = KEYCODE_CUSTOM_OFFSET + 'k',
    KEYCODE_ALT_LL = KEYCODE_CUSTOM_OFFSET + 'l',
    KEYCODE_ALT_LM = KEYCODE_CUSTOM_OFFSET + 'm',
    KEYCODE_ALT_LN = KEYCODE_CUSTOM_OFFSET + 'n',
    KEYCODE_ALT_LO = KEYCODE_CUSTOM_OFFSET + 'o',
    KEYCODE_ALT_LP = KEYCODE_CUSTOM_OFFSET + 'p',
    KEYCODE_ALT_LQ = KEYCODE_CUSTOM_OFFSET + 'q',
    KEYCODE_ALT_LR = KEYCODE_CUSTOM_OFFSET + 'r',
    KEYCODE_ALT_LS = KEYCODE_CUSTOM_OFFSET + 's',
    KEYCODE_ALT_LT = KEYCODE_CUSTOM_OFFSET + 't',
    KEYCODE_ALT_LU = KEYCODE_CUSTOM_OFFSET + 'u',
    KEYCODE_ALT_LV = KEYCODE_CUSTOM_OFFSET + 'v',
    KEYCODE_ALT_LW = KEYCODE_CUSTOM_OFFSET + 'w',
    KEYCODE_ALT_LX = KEYCODE_CUSTOM_OFFSET + 'x',
    KEYCODE_ALT_LY = KEYCODE_CUSTOM_OFFSET + 'y',
    KEYCODE_ALT_LZ = KEYCODE_CUSTOM_OFFSET + 'z',

    KEYCODE_CTRL_ALT_A,
    KEYCODE_CTRL_ALT_B,
    KEYCODE_CTRL_ALT_C,
    KEYCODE_CTRL_ALT_D,
    KEYCODE_CTRL_ALT_E,
    KEYCODE_CTRL_ALT_F,
    KEYCODE_CTRL_ALT_G,
    KEYCODE_CTRL_ALT_H,
    KEYCODE_CTRL_ALT_I,
    KEYCODE_CTRL_ALT_J,
    KEYCODE_CTRL_ALT_K,
    KEYCODE_CTRL_ALT_L,
    KEYCODE_CTRL_ALT_M,
    KEYCODE_CTRL_ALT_N,
    KEYCODE_CTRL_ALT_O,
    KEYCODE_CTRL_ALT_P,
    KEYCODE_CTRL_ALT_Q,
    KEYCODE_CTRL_ALT_R,
    KEYCODE_CTRL_ALT_S,
    KEYCODE_CTRL_ALT_T,
    KEYCODE_CTRL_ALT_U,
    KEYCODE_CTRL_ALT_V,
    KEYCODE_CTRL_ALT_W,
    KEYCODE_CTRL_ALT_X,
    KEYCODE_CTRL_ALT_Y,
    KEYCODE_CTRL_ALT_Z,

    KEYCODE_CTRL_F1,
    KEYCODE_CTRL_F2,
    KEYCODE_CTRL_F3,
    KEYCODE_CTRL_F4,
    KEYCODE_CTRL_F5,
    KEYCODE_CTRL_F6,
    KEYCODE_CTRL_F7,
    KEYCODE_CTRL_F8,
    KEYCODE_CTRL_F9,
    KEYCODE_CTRL_F10,
    KEYCODE_CTRL_F11,
    KEYCODE_CTRL_F12,

    KEYCODE_ALT_F1,
    KEYCODE_ALT_F2,
    KEYCODE_ALT_F3,
    KEYCODE_ALT_F4,
    KEYCODE_ALT_F5,
    KEYCODE_ALT_F6,
    KEYCODE_ALT_F7,
    KEYCODE_ALT_F8,
    KEYCODE_ALT_F9,
    KEYCODE_ALT_F10,
    KEYCODE_ALT_F11,
    KEYCODE_ALT_F12,

    KEYCODE_CTRL_INSERT,
    KEYCODE_CTRL_DELETE,
    KEYCODE_CTRL_HOME,
    KEYCODE_CTRL_END,
    KEYCODE_CTRL_PAGEUP,
    KEYCODE_CTRL_PAGEDOWN,

    KEYCODE_CTRL_UP,
    KEYCODE_CTRL_DOWN,
    KEYCODE_CTRL_LEFT,
    KEYCODE_CTRL_RIGHT,
    KEYCODE_CTRL_MIDDLE,

    KEYCODE_ALT_INSERT,
    KEYCODE_ALT_DELETE,
    KEYCODE_ALT_HOME,
    KEYCODE_ALT_END,
    KEYCODE_ALT_PAGEUP,
    KEYCODE_ALT_PAGEDOWN,

    KEYCODE_ALT_UP,
    KEYCODE_ALT_DOWN,
    KEYCODE_ALT_LEFT,
    KEYCODE_ALT_RIGHT,
    KEYCODE_ALT_MIDDLE,

    KEYCODE_CTRL_ALT_INSERT,
    KEYCODE_CTRL_ALT_DELETE,
    KEYCODE_CTRL_ALT_HOME,
    KEYCODE_CTRL_ALT_END,
    KEYCODE_CTRL_ALT_PAGEUP,
    KEYCODE_CTRL_ALT_PAGEDOWN,

    KEYCODE_CTRL_ALT_UP,
    KEYCODE_CTRL_ALT_DOWN,
    KEYCODE_CTRL_ALT_LEFT,
    KEYCODE_CTRL_ALT_RIGHT,
    KEYCODE_CTRL_ALT_MIDDLE,
};

enum keycode_esc {
    KEYCODE_ESC_NORM   = 0,
    KEYCODE_ESC_ESC    = 1,
    KEYCODE_ESC_CSI    = 2,
    KEYCODE_ESC_SS3    = 3,
};

struct keycode_state {
    enum keycode_esc esc_state;
    char esc_param;
};

// extern bool keycode(struct keycode_state *kstate, enum keycode_result *code);